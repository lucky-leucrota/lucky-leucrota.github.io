{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Dis-Code Documentation (Ver Dev.4.0.1) Here, you will be finding out on - How to write algorithm's to decipher to code - How to use the Dis-Code Application itself Table Of Contents Home About Algorithems Introduction ~ Author: Sas2k","title":"Home"},{"location":"#welcome-to-dis-code-documentation-ver-dev401","text":"Here, you will be finding out on - How to write algorithm's to decipher to code - How to use the Dis-Code Application itself","title":"Welcome to Dis-Code Documentation (Ver Dev.4.0.1)"},{"location":"#table-of-contents","text":"","title":"Table Of Contents"},{"location":"#home","text":"","title":"Home"},{"location":"#about","text":"","title":"About"},{"location":"#algorithems","text":"Introduction ~ Author: Sas2k","title":"Algorithems"},{"location":"Writing-Python-Code/","text":"Writing Python Code in Dis-Code Here, you will learn how to run python code in the Dis-Code app. Writing it. To code python on Dis-Code, do you see a black Textarea next to the message area. That is actually the area where you write code( It has even syntax highlighting!! )Now let's test it out shall we? ok let's make a simple program where the program will ask a number and display the result. For that we can write something like this number = input(\"Enter a number please\") print(number) After that click the run button under the code area. you will get an alert which has a textbox. which where you would enter the input data. like the below image. After you entered that you should get an alert like this. Then check the developer console to see the output Quick Side Bar: To access the Dev-Console you either press Ctrl+Shift+j or go to More Tools -> Developer Console on chrome. The output should be Like this. so that's pretty much it. Extra: You have the entire standard library with you in this. so you can use from random to requests in the script. How this works?? Now you maybe wondering. HOW THE HECK IS THIS WORKING IN THE BROWSER!! well the answer comes in a thing called Pyodide . It's a JS library of which will run python code using WASM(which is Web Assembly BTW.) from it's page it says that, Pyodide is a Python distribution for the browser and Node.js based on WebAssembly. so there you have it folks! so now Have a good day hacking, Thanks for reading! ~ Author: Sas2k","title":"Writing-Python-On-DisCode"},{"location":"Writing-Python-Code/#writing-python-code-in-dis-code","text":"Here, you will learn how to run python code in the Dis-Code app.","title":"Writing Python Code in Dis-Code"},{"location":"Writing-Python-Code/#writing-it","text":"To code python on Dis-Code, do you see a black Textarea next to the message area. That is actually the area where you write code( It has even syntax highlighting!! )Now let's test it out shall we? ok let's make a simple program where the program will ask a number and display the result. For that we can write something like this number = input(\"Enter a number please\") print(number) After that click the run button under the code area. you will get an alert which has a textbox. which where you would enter the input data. like the below image. After you entered that you should get an alert like this. Then check the developer console to see the output Quick Side Bar: To access the Dev-Console you either press Ctrl+Shift+j or go to More Tools -> Developer Console on chrome. The output should be Like this. so that's pretty much it. Extra: You have the entire standard library with you in this. so you can use from random to requests in the script.","title":"Writing it."},{"location":"Writing-Python-Code/#how-this-works","text":"Now you maybe wondering. HOW THE HECK IS THIS WORKING IN THE BROWSER!! well the answer comes in a thing called Pyodide . It's a JS library of which will run python code using WASM(which is Web Assembly BTW.) from it's page it says that, Pyodide is a Python distribution for the browser and Node.js based on WebAssembly. so there you have it folks! so now Have a good day hacking, Thanks for reading! ~ Author: Sas2k","title":"How this works??"},{"location":"about/","text":"About A project done by Lucky-Leucrota For the PyDis CodeJam(9!) 2022 Team Sas2k - Team-Lead , Back-End, Front-End and Docs Harhsal6927 - Back-End, Encryption Algorithms Dilshan-H - Front-End Sam-Tech-2543 - Encryption Algorithms hsiam261 - Encryption Algorithms infinityinfinite - Encryption Algorithms ~ Author: Sas2k","title":"About"},{"location":"about/#about","text":"A project done by Lucky-Leucrota For the PyDis CodeJam(9!) 2022","title":"About"},{"location":"about/#team","text":"Sas2k - Team-Lead , Back-End, Front-End and Docs Harhsal6927 - Back-End, Encryption Algorithms Dilshan-H - Front-End Sam-Tech-2543 - Encryption Algorithms hsiam261 - Encryption Algorithms infinityinfinite - Encryption Algorithms ~ Author: Sas2k","title":"Team"},{"location":"algorithms/","text":"Encryption Algorithems Introduction Here you will find details about the encryption algorithems, the keys and ways to decrypt them. Some of the Encryption Algorithms used here are, - Caeser Cipher - Monoalphabetic Cipher You can always findout which encryption method is used, because the encrption method is always displayed next to the message like below, Here we know that the encryption used is the Vingenere cipher, so we can write some python code in the scripting area. To get the un-encrypted message. To learn more about that checkout the Writing-Python-Code , to have an overview. The algorithms Caeser Cipher \ud83c\udf55 Monoalphabetic Cipher \ud83c\udd70 Transposition Cipher \ud83d\ude87 Vingenere-Cipher \ud83d\udcfc ~ Author: Sas2k","title":"Introduction"},{"location":"algorithms/#encryption-algorithems","text":"","title":"Encryption Algorithems"},{"location":"algorithms/#introduction","text":"Here you will find details about the encryption algorithems, the keys and ways to decrypt them. Some of the Encryption Algorithms used here are, - Caeser Cipher - Monoalphabetic Cipher You can always findout which encryption method is used, because the encrption method is always displayed next to the message like below, Here we know that the encryption used is the Vingenere cipher, so we can write some python code in the scripting area. To get the un-encrypted message. To learn more about that checkout the Writing-Python-Code , to have an overview.","title":"Introduction"},{"location":"algorithms/#the-algorithms","text":"Caeser Cipher \ud83c\udf55 Monoalphabetic Cipher \ud83c\udd70 Transposition Cipher \ud83d\ude87 Vingenere-Cipher \ud83d\udcfc ~ Author: Sas2k","title":"The algorithms"},{"location":"algorithms/caeser-cipher/","text":"Caeser Cipher The Caeser Cipher, also know as the Shift Cipher is named after the roman emperor Julius Caeser (Who used it in his private correspondence.). It is one of the most simplest and widely known encryption technique, The encryption step performed by the \"Caeser Cipher\" Is used on more complex encryption. Like the Vingener Cipher and etc... How it works How the caeser cipher works is very simple. it shifts the letters an amount left or right. like for example. a left shift of 5, F would replace A, G would replace B and so on. Text-Type Alphabet Plaint-Text A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z Cipher-Text F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, A, B, C, D, E So a message saying \"Hello\" would look like this, Mjqqt So, that's the basics of how it works. For extra info: Our Caeser Cipher Contains, Ascii-Uppercase-letters + Ascii-Lowercase-letters + Ascii+digits Keys and Help on deciphering Since, We're nice people we're gonna give you the key we used it's Left shift of 14. But, you can just Brute-Force. It's totally up to you. You can also view our algorithms.py file in our repository to get an idea as well. Now let's write a simple implementation of a decryption script of a caeser cipher. import string message = 'Mjqqt' #encrypted message we used above example LETTERS = string.ascii_lowercase + string.ascii_uppercase + string.digits for key in range(len(LETTERS)): translated = '' for symbol in message: if symbol in LETTERS: num = LETTERS.find(symbol) num = num - key if num < 0: num = num + len(LETTERS) translated = translated + LETTERS[num] else: translated = translated + symbol print('Hacking key #%s: %s' % (key, translated)) The above is a brute force caeser cipher decryption. Output of the above should look like this. As as you can see the highlighted part shows the unencrypted message. And that's it you have learn everything regarding Caeser Cipher. Thanks for reading! ~ Author- Sas2k","title":"Caeser-Cipher"},{"location":"algorithms/caeser-cipher/#caeser-cipher","text":"The Caeser Cipher, also know as the Shift Cipher is named after the roman emperor Julius Caeser (Who used it in his private correspondence.). It is one of the most simplest and widely known encryption technique, The encryption step performed by the \"Caeser Cipher\" Is used on more complex encryption. Like the Vingener Cipher and etc...","title":"Caeser Cipher"},{"location":"algorithms/caeser-cipher/#how-it-works","text":"How the caeser cipher works is very simple. it shifts the letters an amount left or right. like for example. a left shift of 5, F would replace A, G would replace B and so on. Text-Type Alphabet Plaint-Text A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z Cipher-Text F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, A, B, C, D, E So a message saying \"Hello\" would look like this, Mjqqt So, that's the basics of how it works. For extra info: Our Caeser Cipher Contains, Ascii-Uppercase-letters + Ascii-Lowercase-letters + Ascii+digits","title":"How it works"},{"location":"algorithms/caeser-cipher/#keys-and-help-on-deciphering","text":"Since, We're nice people we're gonna give you the key we used it's Left shift of 14. But, you can just Brute-Force. It's totally up to you. You can also view our algorithms.py file in our repository to get an idea as well. Now let's write a simple implementation of a decryption script of a caeser cipher. import string message = 'Mjqqt' #encrypted message we used above example LETTERS = string.ascii_lowercase + string.ascii_uppercase + string.digits for key in range(len(LETTERS)): translated = '' for symbol in message: if symbol in LETTERS: num = LETTERS.find(symbol) num = num - key if num < 0: num = num + len(LETTERS) translated = translated + LETTERS[num] else: translated = translated + symbol print('Hacking key #%s: %s' % (key, translated)) The above is a brute force caeser cipher decryption. Output of the above should look like this. As as you can see the highlighted part shows the unencrypted message. And that's it you have learn everything regarding Caeser Cipher. Thanks for reading! ~ Author- Sas2k","title":"Keys and Help on deciphering"},{"location":"algorithms/monoalphabetic-cipher/","text":"Monoaphabetic Cipher \ud83d\uded1 Still Under Contruction \ud83d\uded1","title":"Monoalphabetic-Cipher"},{"location":"algorithms/monoalphabetic-cipher/#monoaphabetic-cipher","text":"\ud83d\uded1 Still Under Contruction \ud83d\uded1","title":"Monoaphabetic Cipher"},{"location":"algorithms/transposition-cipher/","text":"Transposition-Cipher \ud83d\uded1 Still Under Contruction \ud83d\uded1","title":"Transposition-Cipher"},{"location":"algorithms/transposition-cipher/#transposition-cipher","text":"\ud83d\uded1 Still Under Contruction \ud83d\uded1","title":"Transposition-Cipher"},{"location":"algorithms/vingenere-cipher/","text":"Vingenere Cipher \ud83d\uded1 Still Under Contruction \ud83d\uded1","title":"Vingenere-Cipher"},{"location":"algorithms/vingenere-cipher/#vingenere-cipher","text":"\ud83d\uded1 Still Under Contruction \ud83d\uded1","title":"Vingenere Cipher"}]}